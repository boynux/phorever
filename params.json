{"name":"phorever","tagline":"Role-based daemon and cron management built in PHP for PHP projects","body":"# Phorever\r\n\r\nRole-based long-running process daemon for PHP projects!\r\n\r\n## Overview & Goals\r\n\r\nPhorever provides an easy way to launch and manage background processes based on configuration defined in a `phorever.json` file in your project's root directory.\r\n\r\nPhorever will automatically keep track of all running processes, respawning them based on configured behavior, and fire notifications on aberrant behavior.\r\n\r\nPhorever is installable via [Composer](http://getcomposer.org/) and automatically drops a binary to interact with.\r\n\r\nPhorever's ultimate goal is to make provisioning servers and monitoring long-running processes more idiot proof. For example, a simple `phorever start scheduler` will ensure all background processes required for a scheduler server are running.\r\n\r\n## Installation\r\n\r\nPhorever is provided as a [composer package](http://getcomposer.org/) and requires PHP 5.4 and up. To use Phorever, simply add:\r\n\r\n```json\r\n{\r\n    \"require\": {\r\n        \"dcousineau/phorever\": \"dev-master\"\r\n    }\r\n}\r\n```\r\n\r\nComposer will attempt to symlink the Phorever executable into your own bin folder. It is advisable that you make sure your own `composer.json` file is updated to define where that bin directory is located:\r\n\r\n```json\r\n{\r\n    \"config\": {\r\n        \"bin-dir\": \"bin\"\r\n    }\r\n}\r\n```\r\n\r\n## Configuration\r\n\r\nPhorever by default reads from a configuration file found in your project root named `phorever.json`.\r\n\r\nThis configuration file defines the individual processes that should be launched and tracked, what roles they belong to, where log files should be dumped, among other things.\r\n\r\nAn example configuration file would look like:\r\n\r\n```json\r\n{\r\n    \"pidfile\": \"./phorever_cool.pid\",\r\n    \"timezone\": \"America/Chicago\",\r\n    \"logging\": {\r\n        \"directory\": \"./logs/\"\r\n    },\r\n    \"processes\": [\r\n        {\r\n            \"name\": \"Long Lived\",\r\n            \"roles\": [\"roleb\"],\r\n\r\n            \"up\": \"./tests/commands/longlived\",\r\n\r\n            \"log_forwarding\": true\r\n        },\r\n        {\r\n            \"name\": \"Short Lived\",\r\n            \"roles\": [\"rolea\"],\r\n\r\n            \"up\": \"./tests/commands/shortlived\",\r\n\r\n            \"resurrect_after\": 10,\r\n\r\n            \"clones\": 2,\r\n\r\n            \"log_forwarding\": true\r\n        },\r\n        {\r\n            \"name\": \"Runaway\",\r\n            \"roles\": [\"runaway\"],\r\n\r\n            \"up\": \"./tests/commands/runaway\",\r\n\r\n            \"resurrect_after\": 1,\r\n\r\n            \"log_forwarding\": true\r\n        }\r\n    ]\r\n}\r\n```\r\n\r\nRunning the command `bin/phorever start rolea roleb` will launch both the \"Short Lived\" and \"Long Lived\" processes given they both belong to at least one of the roles we've requested to start.\r\n\r\nPassing the `--daemon` parameter to Phorever will cause it to fork into the background.\r\n\r\n## Project Status\r\n\r\nThe project is currently in an MVP state after some exploratory coding. Currently it launches processes based on requested role and respawns processes after a resurrection wait time.\r\n\r\n**Currently *not* supported, but desperately needed before BETA1:**\r\n\r\n* Processes that daemonize themselves (cannot check custom PIDs)\r\n* Giving up after certain thresholds\r\n* Notification on aberrant behavior\r\n\r\n**Features to come:**\r\n\r\n* Configure respawn and notification behavior\r\n* Hooks for your own custom event listener classes for more fine-grained control\r\n* Status monitor and statistical logs\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}